# -*- coding: utf-8 -*-
# ---------------------------------------------------------------------------
# comm_aoi_2xls.py
# Created on: 2017-10-20 13:22:32.00000
#   (generated by ArcGIS/ModelBuilder)
# Description: 
# ---------------------------------------------------------------------------
#%% Import arcpy module
import sys
import os
import arcpy
from arcpy import env
import pandas as pd
import numpy as np
from pandas import DataFrame
# =============================================================================
import geopandas as gpd
# =============================================================================
sys.path.append(r'C:\01_OCHA_TR\03_IM_Tools\ArcGIS\Community_AoI_2XLS')
#import arcpy_dataframe as arcpy_df
#%%set up file overwrite
arcpy.env.overwriteOutput = True
#get parameter input of data layers and savefilename 
#Get the value of the input parameter
#%%input file
export_ext="xlsx"
l_pnt=r'C:\Dropbox (OCHA)\GIS\02_Geodatabase\Syria.gdb\Settlements\syr_pplp_adm4_unocha_forAoC'
l_ply=r'C:\Dropbox (OCHA)\gis\01_Analysis_Projects\02_Thematic\Humanitarian_Access\data\shape\Territorial Control.gdb\Areas_of_influence_20170925'
f_save_path=r"C:\Dropbox (OCHA)\gis\01_Analysis_Projects\999_Punya_Working\Analysis"
f_save_gdb=r"C:\Dropbox (OCHA)\gis\01_Analysis_Projects\999_Punya_Working\Analysis\Analysis.mdb"
#%%create XLSX save name
f_save_name=os.path.join(f_save_path,os.path.basename(l_ply)+"_community.xls")
# Local temporary save file
t_l_pnt = os.path.join(f_save_gdb,os.path.basename(l_ply)+"_community")
#%%perform spatial join
arcpy.SpatialJoin_analysis(target_features = l_pnt,
  join_features = l_ply,
  out_feature_class = t_l_pnt,
  join_operation = "JOIN_ONE_TO_ONE",
  join_type = "KEEP_ALL",
  match_option="WITHIN",
  distance_field_name='')                           
#%%Process: Table To Excel
arcpy.TableToExcel_conversion(t_l_pnt, f_save_name, "NAME", "CODE")
#%%-----Change to Pandas Dataframe
# variable to store list
fields = []
# for every field in the feature class
for field in arcpy.ListFields(t_l_pnt):
        # if the field is not geometry nor oid
        if field.type != 'Geometry' and field.type != 'OID':
            # append the field name to the list
            fields.append(field.name)
#field_list= fields_list(t_l_pnt)
field_list=['admin1Name_en','admin2Name_en','admin3Name_en','admin3Pcode','admin4Name_en','admin4Pcode']
field_list=fields
fc_np=arcpy.da.FeatureClassToNumPyArray(
        in_table=t_l_pnt,
        field_names=field_list,
        #skip_nulls=True
        skip_nulls=False,
        null_value=-99999
        )
fc_pd=DataFrame(fc_np)
fc_pd.to_excel(f_save_name)
